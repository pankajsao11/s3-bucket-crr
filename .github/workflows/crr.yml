name : Terraform CI/CD
on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform actions to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

permissions:
  contents: read

jobs:
  terraform:
    name: Terraform ${{ github.event.inputs.action || 'apply'}}
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      #Download state before destroy
      - name: Download Terraform state Artifact
        if: ${{ github.event.inputs.action == 'destroy' }}
        uses: actions/download-artifact@v3
        with:
          name: terraform-state

      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt --recursive

      - name: Validate Terraform
        run: terraform validate

      - name: Terraform Plan
        if: ${{ github.event.inputs.action != 'destroy' }}
        run: terraform plan -out=tfplan
        
      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        run: terraform apply -auto-approve tfplan

      # Save state after apply
      - name: Upload Terraform state artifact
        if: ${{ github.event.inputs.action == 'apply' }}
        uses: actions/upload-artifact@v3
        with:
          name: terraform-state
          path: |
            terraform.tfstate
            .terraform/
            
      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve
